// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: stat.proto

package stat

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Stat_Platform int32

const (
	Stat_PC      Stat_Platform = 0
	Stat_iOS     Stat_Platform = 1
	Stat_Android Stat_Platform = 2
	Stat_MOBILE  Stat_Platform = 3
)

// Enum value maps for Stat_Platform.
var (
	Stat_Platform_name = map[int32]string{
		0: "PC",
		1: "iOS",
		2: "Android",
		3: "MOBILE",
	}
	Stat_Platform_value = map[string]int32{
		"PC":      0,
		"iOS":     1,
		"Android": 2,
		"MOBILE":  3,
	}
)

func (x Stat_Platform) Enum() *Stat_Platform {
	p := new(Stat_Platform)
	*p = x
	return p
}

func (x Stat_Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Stat_Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_stat_proto_enumTypes[0].Descriptor()
}

func (Stat_Platform) Type() protoreflect.EnumType {
	return &file_stat_proto_enumTypes[0]
}

func (x Stat_Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Stat_Platform.Descriptor instead.
func (Stat_Platform) EnumDescriptor() ([]byte, []int) {
	return file_stat_proto_rawDescGZIP(), []int{2, 0}
}

type EmptyParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyParameter) Reset() {
	*x = EmptyParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyParameter) ProtoMessage() {}

func (x *EmptyParameter) ProtoReflect() protoreflect.Message {
	mi := &file_stat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyParameter.ProtoReflect.Descriptor instead.
func (*EmptyParameter) Descriptor() ([]byte, []int) {
	return file_stat_proto_rawDescGZIP(), []int{0}
}

type EmptyReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReturn) Reset() {
	*x = EmptyReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReturn) ProtoMessage() {}

func (x *EmptyReturn) ProtoReflect() protoreflect.Message {
	mi := &file_stat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReturn.ProtoReflect.Descriptor instead.
func (*EmptyReturn) Descriptor() ([]byte, []int) {
	return file_stat_proto_rawDescGZIP(), []int{1}
}

type Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform Stat_Platform `protobuf:"varint,3,opt,name=platform,proto3,enum=stat.Stat_Platform" json:"platform,omitempty"`
	Account  string        `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Path     string        `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Action   string        `protobuf:"bytes,7,opt,name=action,proto3" json:"action,omitempty"`
	Time     int64         `protobuf:"varint,9,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Stat) Reset() {
	*x = Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_stat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_stat_proto_rawDescGZIP(), []int{2}
}

func (x *Stat) GetPlatform() Stat_Platform {
	if x != nil {
		return x.Platform
	}
	return Stat_PC
}

func (x *Stat) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Stat) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Stat) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Stat) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type AddReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool  `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Data   *Stat `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddReturn) Reset() {
	*x = AddReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReturn) ProtoMessage() {}

func (x *AddReturn) ProtoReflect() protoreflect.Message {
	mi := &file_stat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReturn.ProtoReflect.Descriptor instead.
func (*AddReturn) Descriptor() ([]byte, []int) {
	return file_stat_proto_rawDescGZIP(), []int{3}
}

func (x *AddReturn) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *AddReturn) GetData() *Stat {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchAddSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Success int32 `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Failed  int32 `protobuf:"varint,5,opt,name=failed,proto3" json:"failed,omitempty"`
}

func (x *BatchAddSummary) Reset() {
	*x = BatchAddSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddSummary) ProtoMessage() {}

func (x *BatchAddSummary) ProtoReflect() protoreflect.Message {
	mi := &file_stat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddSummary.ProtoReflect.Descriptor instead.
func (*BatchAddSummary) Descriptor() ([]byte, []int) {
	return file_stat_proto_rawDescGZIP(), []int{4}
}

func (x *BatchAddSummary) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BatchAddSummary) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *BatchAddSummary) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

type StatList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatArray []*Stat `protobuf:"bytes,1,rep,name=StatArray,proto3" json:"StatArray,omitempty"`
}

func (x *StatList) Reset() {
	*x = StatList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatList) ProtoMessage() {}

func (x *StatList) ProtoReflect() protoreflect.Message {
	mi := &file_stat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatList.ProtoReflect.Descriptor instead.
func (*StatList) Descriptor() ([]byte, []int) {
	return file_stat_proto_rawDescGZIP(), []int{5}
}

func (x *StatList) GetStatArray() []*Stat {
	if x != nil {
		return x.StatArray
	}
	return nil
}

type SearchParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword  string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Page     int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *SearchParameters) Reset() {
	*x = SearchParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchParameters) ProtoMessage() {}

func (x *SearchParameters) ProtoReflect() protoreflect.Message {
	mi := &file_stat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchParameters.ProtoReflect.Descriptor instead.
func (*SearchParameters) Descriptor() ([]byte, []int) {
	return file_stat_proto_rawDescGZIP(), []int{6}
}

func (x *SearchParameters) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchParameters) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchParameters) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  *StatList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_stat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_stat_proto_rawDescGZIP(), []int{7}
}

func (x *SearchResult) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchResult) GetData() *StatList {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_stat_proto protoreflect.FileDescriptor

var file_stat_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x22, 0x0d, 0x0a, 0x0b, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x22, 0xc7, 0x01, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x2f, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x06, 0x0a, 0x02, 0x50, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x69,
	0x4f, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x10, 0x03, 0x22, 0x43, 0x0a,
	0x09, 0x41, 0x64, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x59, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x34, 0x0a,
	0x08, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x22, 0x5d, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x48, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x8d, 0x02, 0x0a,
	0x0b, 0x53, 0x74, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x03,
	0x41, 0x64, 0x64, 0x12, 0x0a, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x1a,
	0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x22, 0x00, 0x12, 0x28, 0x0a, 0x08, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x12, 0x0a,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x1a, 0x0a, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3c, 0x0a, 0x13,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x57, 0x69, 0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x0a, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x1a,
	0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x12, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x38, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x0a, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42, 0x08, 0x5a, 0x06,
	0x2e, 0x3b, 0x73, 0x74, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stat_proto_rawDescOnce sync.Once
	file_stat_proto_rawDescData = file_stat_proto_rawDesc
)

func file_stat_proto_rawDescGZIP() []byte {
	file_stat_proto_rawDescOnce.Do(func() {
		file_stat_proto_rawDescData = protoimpl.X.CompressGZIP(file_stat_proto_rawDescData)
	})
	return file_stat_proto_rawDescData
}

var file_stat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_stat_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_stat_proto_goTypes = []interface{}{
	(Stat_Platform)(0),       // 0: stat.Stat.Platform
	(*EmptyParameter)(nil),   // 1: stat.EmptyParameter
	(*EmptyReturn)(nil),      // 2: stat.EmptyReturn
	(*Stat)(nil),             // 3: stat.Stat
	(*AddReturn)(nil),        // 4: stat.AddReturn
	(*BatchAddSummary)(nil),  // 5: stat.BatchAddSummary
	(*StatList)(nil),         // 6: stat.StatList
	(*SearchParameters)(nil), // 7: stat.searchParameters
	(*SearchResult)(nil),     // 8: stat.searchResult
}
var file_stat_proto_depIdxs = []int32{
	0, // 0: stat.Stat.platform:type_name -> stat.Stat.Platform
	3, // 1: stat.AddReturn.data:type_name -> stat.Stat
	3, // 2: stat.StatList.StatArray:type_name -> stat.Stat
	6, // 3: stat.searchResult.data:type_name -> stat.StatList
	3, // 4: stat.StatService.Add:input_type -> stat.Stat
	3, // 5: stat.StatService.BatchAdd:input_type -> stat.Stat
	3, // 6: stat.StatService.BatchAddWithSummary:input_type -> stat.Stat
	7, // 7: stat.StatService.Search:input_type -> stat.searchParameters
	7, // 8: stat.StatService.ListSearchData:input_type -> stat.searchParameters
	4, // 9: stat.StatService.Add:output_type -> stat.AddReturn
	3, // 10: stat.StatService.BatchAdd:output_type -> stat.Stat
	5, // 11: stat.StatService.BatchAddWithSummary:output_type -> stat.BatchAddSummary
	8, // 12: stat.StatService.Search:output_type -> stat.searchResult
	3, // 13: stat.StatService.ListSearchData:output_type -> stat.Stat
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_stat_proto_init() }
func file_stat_proto_init() {
	if File_stat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stat_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stat_proto_goTypes,
		DependencyIndexes: file_stat_proto_depIdxs,
		EnumInfos:         file_stat_proto_enumTypes,
		MessageInfos:      file_stat_proto_msgTypes,
	}.Build()
	File_stat_proto = out.File
	file_stat_proto_rawDesc = nil
	file_stat_proto_goTypes = nil
	file_stat_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StatServiceClient is the client API for StatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatServiceClient interface {
	Add(ctx context.Context, in *Stat, opts ...grpc.CallOption) (*AddReturn, error)
	BatchAdd(ctx context.Context, opts ...grpc.CallOption) (StatService_BatchAddClient, error)
	BatchAddWithSummary(ctx context.Context, opts ...grpc.CallOption) (StatService_BatchAddWithSummaryClient, error)
	Search(ctx context.Context, in *SearchParameters, opts ...grpc.CallOption) (*SearchResult, error)
	ListSearchData(ctx context.Context, in *SearchParameters, opts ...grpc.CallOption) (StatService_ListSearchDataClient, error)
}

type statServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStatServiceClient(cc grpc.ClientConnInterface) StatServiceClient {
	return &statServiceClient{cc}
}

func (c *statServiceClient) Add(ctx context.Context, in *Stat, opts ...grpc.CallOption) (*AddReturn, error) {
	out := new(AddReturn)
	err := c.cc.Invoke(ctx, "/stat.StatService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statServiceClient) BatchAdd(ctx context.Context, opts ...grpc.CallOption) (StatService_BatchAddClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StatService_serviceDesc.Streams[0], "/stat.StatService/BatchAdd", opts...)
	if err != nil {
		return nil, err
	}
	x := &statServiceBatchAddClient{stream}
	return x, nil
}

type StatService_BatchAddClient interface {
	Send(*Stat) error
	Recv() (*Stat, error)
	grpc.ClientStream
}

type statServiceBatchAddClient struct {
	grpc.ClientStream
}

func (x *statServiceBatchAddClient) Send(m *Stat) error {
	return x.ClientStream.SendMsg(m)
}

func (x *statServiceBatchAddClient) Recv() (*Stat, error) {
	m := new(Stat)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *statServiceClient) BatchAddWithSummary(ctx context.Context, opts ...grpc.CallOption) (StatService_BatchAddWithSummaryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StatService_serviceDesc.Streams[1], "/stat.StatService/BatchAddWithSummary", opts...)
	if err != nil {
		return nil, err
	}
	x := &statServiceBatchAddWithSummaryClient{stream}
	return x, nil
}

type StatService_BatchAddWithSummaryClient interface {
	Send(*Stat) error
	CloseAndRecv() (*BatchAddSummary, error)
	grpc.ClientStream
}

type statServiceBatchAddWithSummaryClient struct {
	grpc.ClientStream
}

func (x *statServiceBatchAddWithSummaryClient) Send(m *Stat) error {
	return x.ClientStream.SendMsg(m)
}

func (x *statServiceBatchAddWithSummaryClient) CloseAndRecv() (*BatchAddSummary, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(BatchAddSummary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *statServiceClient) Search(ctx context.Context, in *SearchParameters, opts ...grpc.CallOption) (*SearchResult, error) {
	out := new(SearchResult)
	err := c.cc.Invoke(ctx, "/stat.StatService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statServiceClient) ListSearchData(ctx context.Context, in *SearchParameters, opts ...grpc.CallOption) (StatService_ListSearchDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StatService_serviceDesc.Streams[2], "/stat.StatService/ListSearchData", opts...)
	if err != nil {
		return nil, err
	}
	x := &statServiceListSearchDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StatService_ListSearchDataClient interface {
	Recv() (*Stat, error)
	grpc.ClientStream
}

type statServiceListSearchDataClient struct {
	grpc.ClientStream
}

func (x *statServiceListSearchDataClient) Recv() (*Stat, error) {
	m := new(Stat)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StatServiceServer is the server API for StatService service.
type StatServiceServer interface {
	Add(context.Context, *Stat) (*AddReturn, error)
	BatchAdd(StatService_BatchAddServer) error
	BatchAddWithSummary(StatService_BatchAddWithSummaryServer) error
	Search(context.Context, *SearchParameters) (*SearchResult, error)
	ListSearchData(*SearchParameters, StatService_ListSearchDataServer) error
}

// UnimplementedStatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStatServiceServer struct {
}

func (*UnimplementedStatServiceServer) Add(context.Context, *Stat) (*AddReturn, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedStatServiceServer) BatchAdd(StatService_BatchAddServer) error {
	return status.Errorf(codes.Unimplemented, "method BatchAdd not implemented")
}
func (*UnimplementedStatServiceServer) BatchAddWithSummary(StatService_BatchAddWithSummaryServer) error {
	return status.Errorf(codes.Unimplemented, "method BatchAddWithSummary not implemented")
}
func (*UnimplementedStatServiceServer) Search(context.Context, *SearchParameters) (*SearchResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedStatServiceServer) ListSearchData(*SearchParameters, StatService_ListSearchDataServer) error {
	return status.Errorf(codes.Unimplemented, "method ListSearchData not implemented")
}

func RegisterStatServiceServer(s *grpc.Server, srv StatServiceServer) {
	s.RegisterService(&_StatService_serviceDesc, srv)
}

func _StatService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Stat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stat.StatService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatServiceServer).Add(ctx, req.(*Stat))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatService_BatchAdd_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StatServiceServer).BatchAdd(&statServiceBatchAddServer{stream})
}

type StatService_BatchAddServer interface {
	Send(*Stat) error
	Recv() (*Stat, error)
	grpc.ServerStream
}

type statServiceBatchAddServer struct {
	grpc.ServerStream
}

func (x *statServiceBatchAddServer) Send(m *Stat) error {
	return x.ServerStream.SendMsg(m)
}

func (x *statServiceBatchAddServer) Recv() (*Stat, error) {
	m := new(Stat)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StatService_BatchAddWithSummary_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StatServiceServer).BatchAddWithSummary(&statServiceBatchAddWithSummaryServer{stream})
}

type StatService_BatchAddWithSummaryServer interface {
	SendAndClose(*BatchAddSummary) error
	Recv() (*Stat, error)
	grpc.ServerStream
}

type statServiceBatchAddWithSummaryServer struct {
	grpc.ServerStream
}

func (x *statServiceBatchAddWithSummaryServer) SendAndClose(m *BatchAddSummary) error {
	return x.ServerStream.SendMsg(m)
}

func (x *statServiceBatchAddWithSummaryServer) Recv() (*Stat, error) {
	m := new(Stat)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StatService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchParameters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stat.StatService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatServiceServer).Search(ctx, req.(*SearchParameters))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatService_ListSearchData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchParameters)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StatServiceServer).ListSearchData(m, &statServiceListSearchDataServer{stream})
}

type StatService_ListSearchDataServer interface {
	Send(*Stat) error
	grpc.ServerStream
}

type statServiceListSearchDataServer struct {
	grpc.ServerStream
}

func (x *statServiceListSearchDataServer) Send(m *Stat) error {
	return x.ServerStream.SendMsg(m)
}

var _StatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stat.StatService",
	HandlerType: (*StatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _StatService_Add_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _StatService_Search_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BatchAdd",
			Handler:       _StatService_BatchAdd_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "BatchAddWithSummary",
			Handler:       _StatService_BatchAddWithSummary_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ListSearchData",
			Handler:       _StatService_ListSearchData_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "stat.proto",
}
